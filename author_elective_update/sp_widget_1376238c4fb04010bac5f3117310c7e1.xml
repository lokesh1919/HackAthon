<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="DELETE">
        <category>other</category>
        <client_script><![CDATA[function ($scope, spUtil, spUIActionsExecuter) {
	var ESIGNATURE = {
		TYPE: "form",
		APPROVE_SYS: "cbfe291147220100ba13a5554ee4904d",
		REJECT_SYS: "580f711147220100ba13a5554ee4904b"
	};

	if ($scope.options.portal == true || $scope.options.portal == 'true') {
		$scope.contentColClass = "col-xs-12";
		$scope.options.portal = true;
	} else {
		$scope.options.portal = false;
		$scope.contentColClass = "col-sm-9";
	}

	$scope.data.op = "";
	spUtil.recordWatch($scope, "sysapproval_approver", "state=requested^approverIN" + $scope.data.myApprovals.toString());

	function get() {
		spUtil.update($scope);
	}

	$scope.approve = function(id, esigRequired) {
		var requestParams = {
			username: $scope.data.esignature.username,
			userSysId: $scope.data.esignature.userSysId
		};

		if($scope.data.esignature.e_sig_required && esigRequired) {
			spUIActionsExecuter.executeFormAction(ESIGNATURE.APPROVE_SYS, "sysapproval_approver" , id, [] , "", requestParams).then(function(response) {
			});			
		} else {
			$scope.data.op = "approved";
			$scope.data.target = id;
			get();
		}
  }

	$scope.reject = function(id, esigRequired) {
		var requestParams = {
			username: $scope.data.esignature.username,
			userSysId: $scope.data.esignature.userSysId
		};

		if($scope.data.esignature.e_sig_required && esigRequired) {
			spUIActionsExecuter.executeFormAction(ESIGNATURE.REJECT_SYS, "sysapproval_approver" , id, [] , "", requestParams).then(function(response) {
			});
		} else {
			$scope.data.op = "rejected";
			$scope.data.target = id;
			get();  
		}
	}

	// pagination
	$scope.previousPage = function() {
		if ($scope.data.pagination.currentPage > 1)
			$scope.data.pagination.currentPage = $scope.data.pagination.currentPage - 1;
		else
			$scope.data.pagination.currentPage = 0;

		get();
	}

	$scope.nextPage = function() {
		$scope.data.pagination.currentPage = $scope.data.pagination.currentPage+1;
		get();
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.pre-wrap {
  white-space:pre-wrap;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>color,glyph</field_list>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name> Approvals_ci</name>
        <option_schema>[{"hint":"If false, buttons are stacked on the right; if true, they are side-by-side","name":"portal","section":"Presentation","label":"Buttons stacked side by side","type":"boolean"},{"hint":"Maximum number of elements that are shown in the list of approvals","name":"max_number_of_elements_shown_on_the_list","default_value":"10","section":"Presentation","label":"Max number of elements shown in the list (only positive numbers &gt; 0, 10 otherwise)","type":"integer"}]</option_schema>
        <public>true</public>
        <roles/>
        <script><![CDATA[//we get only a max number of elements to avoid to have a big list of it
var maxNumberOfItemsInTheList = parseInt(options.max_number_of_elements_shown_on_the_list);
//set 10 if maxnumber is undefined, empty or negative value
maxNumberOfItemsInTheList = maxNumberOfItemsInTheList>0 ? maxNumberOfItemsInTheList : 10; 

var initRow = 0;
var lastRow = maxNumberOfItemsInTheList;
var currentPage = 0; //0 is the first page
if (input) {
	// update pagination
	currentPage = input.pagination.currentPage;
	initRow = (currentPage * maxNumberOfItemsInTheList);
	lastRow = initRow + maxNumberOfItemsInTheList;
	
	if (input.op == 'approved' || input.op == 'rejected') {
		var app = new GlideRecord("sysapproval_approver");
		if (app.get(input.target) && app.state.canWrite()) {
			app.state = input.op;
			app.update();
		}
	}
}

data.ViewApprovalPageMsg = gs.getMessage("View approval page");
data.esignature = {
	username:  gs.getUserName(),
	userSysId: gs.getUserID(),
	e_sig_required: GlidePluginManager.isRegistered('com.glide.e_signature_approvals')
};

var esigRequiredMap = {};
if (data.esignature.e_sig_required) {
	var esigRegistryGR = new GlideRecord("e_signature_registry");
	esigRegistryGR.addQuery("enabled", "true");
	esigRegistryGR.query();
	while(esigRegistryGR.next()) {
		esigRequiredMap[esigRegistryGR.getValue("table_name")] = true;
	}
}

var gr = new GlideRecord('sysapproval_approver');
gr.chooseWindow(initRow, lastRow);
var qc1 = gr.addQuery("state", "requested");
//if (input)
//  qc1.addOrCondition("sys_id", "IN", input.ids);
data.myApprovals = getMyApprovals();
gr.addQuery("approver", data.myApprovals);
gr.orderBy("sys_created_on");
gr.query();
var rowCount = gr.getRowCount();
var approvals = [];
var ids = [];
var source_tables = [];

while (gr.next()) {
  var task = getRecordBeingApproved(gr);
	if (!task.isValidRecord())
		continue;

  ids.push(gr.getUniqueValue());
  var t = {};
  t.number = task.getDisplayValue();
  t.short_description = task.short_description.toString();
  if (gr.getValue("approver") != gs.getUserID())
	  t.approver = gr.approver.getDisplayValue();
  if (task.isValidField("opened_by") && !task.opened_by.nil())
	  t.opened_by = task.opened_by.getDisplayValue();

  // requestor >> opener
  if (task.isValidField("requested_by") && !task.requested_by.nil())
	  t.opened_by = task.requested_by.getDisplayValue();

  t.start_date = task.start_date.getDisplayValue();
  t.end_date = task.end_date.getDisplayValue();
  t.quantity = task.quantity.getDisplayValue();
  t.table = task.getLabel();
  if (task.getValue("price") > 0)
	  t.price = task.getDisplayValue("price");

  if (task.getValue("recurring_price") > 0)
	  t.recurring_price = task.getDisplayValue("recurring_price");

  t.recurring_frequency = task.getDisplayValue("recurring_frequency");

  var items = [];
  var idx = 0;
  var itemsGR = new GlideRecord("sc_req_item");
  itemsGR.addQuery("request", task.sys_id);
  itemsGR.query();
  if (itemsGR.getRowCount() > 1)
    t.short_description = itemsGR.getRowCount() + " requested items";

  while (itemsGR.next()) {
    var item = {};
    item.short_description = itemsGR.short_description.toString();
    if (itemsGR.getValue("price") > 0)
      item.price = itemsGR.getDisplayValue("price");
    if (itemsGR.getValue("recurring_price") > 0) {
      item.recurring_price = itemsGR.getDisplayValue("recurring_price");
      item.recurring_frequency = itemsGR.getDisplayValue("recurring_frequency");
    }
    if (itemsGR.getRowCount() == 1) {
      item.variables = $sp.getRecordVariablesArray(itemsGR);
      t.short_description = itemsGR.short_description.toString();
    }

    items[idx] = item;
    idx++;
  }

  var j = {};
  j.sys_id = gr.getUniqueValue();
  j.table = gr.getRecordClassName();
	j.approval_source_table = gr.getValue("source_table");
	if (!j.approval_source_table)
		j.approval_source_table = gr.sysapproval.sys_class_name + "";
	j.requireEsigApproval = esigRequiredMap[j.approval_source_table];
	j.task = t;
  if (task)
    j.variables = $sp.getRecordVariablesArray(task);

  j.items = items;
  j.state = gr.getValue("state");
  j.stateLabel = gr.state.getDisplayValue();
  approvals.push(j);
}

data.ids = ids;
data.approvals = approvals;
data.showApprovals =gs.getUser().hasRole('approver_user');
// for pagination
data.pagination = {};
data.pagination.hasNext = (approvals.length == (parseInt(lastRow) - parseInt(initRow)) && lastRow < rowCount);
data.pagination.hasPrevious = parseInt(initRow) > 0;
data.pagination.from = parseInt(initRow + 1);
data.pagination.to = parseInt(lastRow) < parseInt(rowCount) ? parseInt(lastRow) : parseInt(rowCount);
data.pagination.of = parseInt(rowCount);
data.pagination.showPagination = data.pagination.hasPrevious || data.pagination.hasNext;
data.pagination.currentPage = data.pagination.from > data.pagination.to ? currentPage -1 : currentPage;

function getRecordBeingApproved(gr) {
  if (!gr.sysapproval.nil())
    return gr.sysapproval.getRefRecord();

  return gr.document_id.getRefRecord();
}]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>160031518</sys_created_by>
        <sys_created_on>2019-10-25 10:32:34</sys_created_on>
        <sys_id>1376238c4fb04010bac5f3117310c7e1</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name> Approvals_ci</sys_name>
        <sys_package display_value="NoDue" source="x_386572_nodue">5df4a101db4333002aea1fc768961924</sys_package>
        <sys_policy/>
        <sys_scope display_value="NoDue">5df4a101db4333002aea1fc768961924</sys_scope>
        <sys_update_name>sp_widget_1376238c4fb04010bac5f3117310c7e1</sys_update_name>
        <sys_updated_by>160031518</sys_updated_by>
        <sys_updated_on>2019-10-25 10:48:12</sys_updated_on>
        <template><![CDATA[<div class="panel panel-{{::options.color}} b" ng-if="data.showApprovals">
  <div class="panel-heading">
    <h2 class="h4 panel-title"><fa ng-if="::options.glyph.length" name="{{::options.glyph}}" class="m-r-sm" />${My Approvals}
      <label ng-if="data.pagination.showPagination && (data.pagination.from <= data.pagination.to)" class="pull-right text-info"><span ng-if="data.pagination.from != data.pagination.to">{{data.pagination.from}} ${to_lower}</span> {{data.pagination.to}} of {{data.pagination.of}}</label></h2>
  </div>
  <div class="panel-body" ng-class="{'padder-b-none': data.approvals.length != 0}">
    <div ng-if="data.approvals.length == 0 && data.pagination.of == 0">
      ${You have no pending approvals}
    </div>
    <div ng-if="data.approvals.length == 0 && data.pagination.of != 0">
      ${Loading approvals...}
    </div>
    <div ng-repeat="approval in data.approvals" class="sp-approval m-b-xl">
      <div class="row">
        <div ng-class="contentColClass">
          <div ng-if="approval.task.number || approval.task.short_description">
            <a ng-href="?id=approval&table=sysapproval_approver&sys_id={{::approval.sys_id}}" title="{{data.ViewApprovalPageMsg}}">
              <span ng-if="approval.task.number">{{::approval.task.number}}</span>
              <span ng-if="approval.task.number && approval.task.short_description"> - </span>
              <span ng-if="approval.task.short_description">{{::approval.task.short_description}}</span>
            </a>
          </div>
          <div ng-if="approval.task.opened_by"><label>${Requestor}</label> {{::approval.task.opened_by}}</div>
          <div ng-if="approval.task.approver"><label>${Approver}</label> {{::approval.task.approver}}</div>
          <div ng-if="approval.task.start_date"><label>${Start}</label> {{::approval.task.start_date}}</div>
          <div ng-if="approval.task.end_date"><label>${End}</label> {{::approval.task.end_date}}</div>
          <div ng-if="approval.task.quantity"><label>${Quantity}</label> {{::approval.task.quantity}}</div>
          <div ng-if="approval.task.price"><label>${Price}</label> {{::approval.task.price}}
            <span ng-if="approval.task.recurring_price"><label>${Recurring price}</label> {{::approval.task.recurring_price}} {{::approval.task.recurring_frequency}}</span>
            <label ng-if="approval.task.quantity && approval.task.quantity > 1"> ${each}</label>
          </div>
          <div ng-if="approval.items.length == 1">
            <div ng-repeat="item in approval.items">
              <div ng-if="item.variables.length > 0" ng-init="variable_toggle=false">
                <a href="javascript:void(0)" ng-click="variable_toggle = !variable_toggle">
                  <span class="glyphicon"
                        ng-class="{'glyphicon-chevron-down': !variable_toggle, 'glyphicon-chevron-up': variable_toggle}">
                  </span>
                  ${Options}
                </a>
                <div ng-repeat="variable in item.variables" ng-if="variable_toggle">
                  <label class="text-muted">{{::variable.label}}</label>
                  <div><span class="pre-wrap">{{::variable.display_value}}</span></div>
                </div>
              </div>
            </div>
          </div>

          <div ng-if="approval.variables.length > 0" ng-init="variable_toggle=false">
            <a href="javascript:void(0)" ng-click="variable_toggle = !variable_toggle">
              <span class="glyphicon"
                    ng-class="{'glyphicon-chevron-down': !variable_toggle, 'glyphicon-chevron-up': variable_toggle}">
              </span>
              ${Options}
            </a>
            <div ng-repeat="variable in approval.variables" ng-if="variable_toggle">
              <label>{{::variable.label}}</label>
              <div><span class="pre-wrap">{{::variable.display_value}}</span></div>
            </div>
          </div>
        </div>

        <div ng-if="!options.portal" class="col-sm-3">
          <button name="approve" ng-if="approval.state == 'requested'" class="btn btn-primary btn-block" style="border-width:1px;" ng-click="approve(approval.sys_id, approval.requireEsigApproval);">${Approve}</button>
          <button name="reject" ng-if="approval.state == 'requested'" class="btn btn-default btn-block" ng-click="reject(approval.sys_id, approval.requireEsigApproval);">${Reject}</button>
          <button ng-if="approval.state == 'approved'" class="btn btn-success btn-block">{{approval.stateLabel}}</button>
          <button ng-if="approval.state == 'rejected'" class="btn btn-danger btn-block">{{approval.stateLabel}}</button>
          <button ng-if="approval.state != 'requested'" class="btn btn-default btn-block" style="visibility:hidden">{{approval.stateLabel}}</button>
        </div>
        <div ng-if="options.portal && approval.state == 'requested'" class="col-xs-6">
          <button name="reject" class="btn btn-default btn-block" ng-click="reject(approval.sys_id, approval.requireEsigApproval);">${Reject}</button>
        </div>
        <div ng-if="options.portal && approval.state == 'requested'" class="col-xs-6">
          <button name="approve" class="btn btn-primary btn-block" ng-click="approve(approval.sys_id, approval.requireEsigApproval);">${Approve}</button>
        </div>
        <div ng-if="options.portal && approval.state != 'requested'" class="col-xs-12">
          <button ng-if="approval.state == 'approved'" class="btn btn-success btn-block">{{approval.stateLabel}}</button>
          <button ng-if="approval.state == 'rejected'" class="btn btn-danger btn-block">{{approval.stateLabel}}</button>
        </div>
      </div>
    </div> <!-- body -->

  </div>
  <div class="panel-footer clearfix" ng-if="data.pagination.showPagination">
    <a id="previous-btn" href="javascript:void(0)" ng-click="previousPage()" ng-show="data.pagination.hasPrevious" class="pull-left btn btn-sm btn-default" aria-label="${Pagination button Previous}">
      <i class="fa fa-arrow-left m-r-sm" aria-hidden="true"></i>${Previous}</a>
    <a id="next_btn" href="javascript:void(0)" ng-click="nextPage()" ng-show="data.pagination.hasNext" class="pull-right btn btn-sm btn-default " aria-label="${Pagination button Next}">
      ${Next}<i class="fa fa-arrow-right m-r-sm col-md-offset-3" aria-hidden="true"></i></a>
  </div>
</div>]]></template>
    </sp_widget>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="NoDue">5df4a101db4333002aea1fc768961924</application>
        <file_path/>
        <instance_id>cf167e4fdbb8d7c88264f70fbf9619b9</instance_id>
        <instance_name>dev53182</instance_name>
        <name>sp_widget_1376238c4fb04010bac5f3117310c7e1</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;other&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function ($scope, spUtil, spUIActionsExecuter) {
	var ESIGNATURE = {
		TYPE: "form",
		APPROVE_SYS: "cbfe291147220100ba13a5554ee4904d",
		REJECT_SYS: "580f711147220100ba13a5554ee4904b"
	};

	if ($scope.options.portal == true || $scope.options.portal == 'true') {
		$scope.contentColClass = "col-xs-12";
		$scope.options.portal = true;
	} else {
		$scope.options.portal = false;
		$scope.contentColClass = "col-sm-9";
	}

	$scope.data.op = "";
	spUtil.recordWatch($scope, "sysapproval_approver", "state=requested^approverIN" + $scope.data.myApprovals.toString());

	function get() {
		spUtil.update($scope);
	}

	$scope.approve = function(id, esigRequired) {
		var requestParams = {
			username: $scope.data.esignature.username,
			userSysId: $scope.data.esignature.userSysId
		};

		if($scope.data.esignature.e_sig_required &amp;&amp; esigRequired) {
			spUIActionsExecuter.executeFormAction(ESIGNATURE.APPROVE_SYS, "sysapproval_approver" , id, [] , "", requestParams).then(function(response) {
			});			
		} else {
			$scope.data.op = "approved";
			$scope.data.target = id;
			get();
		}
  }

	$scope.reject = function(id, esigRequired) {
		var requestParams = {
			username: $scope.data.esignature.username,
			userSysId: $scope.data.esignature.userSysId
		};

		if($scope.data.esignature.e_sig_required &amp;&amp; esigRequired) {
			spUIActionsExecuter.executeFormAction(ESIGNATURE.REJECT_SYS, "sysapproval_approver" , id, [] , "", requestParams).then(function(response) {
			});
		} else {
			$scope.data.op = "rejected";
			$scope.data.target = id;
			get();  
		}
	}

	// pagination
	$scope.previousPage = function() {
		if ($scope.data.pagination.currentPage &gt; 1)
			$scope.data.pagination.currentPage = $scope.data.pagination.currentPage - 1;
		else
			$scope.data.pagination.currentPage = 0;

		get();
	}

	$scope.nextPage = function() {
		$scope.data.pagination.currentPage = $scope.data.pagination.currentPage+1;
		get();
	}
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.pre-wrap {
  white-space:pre-wrap;
}&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list&gt;color,glyph&lt;/field_list&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id/&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {  }]]&gt;&lt;/link&gt;&lt;name&gt; Approvals_ci&lt;/name&gt;&lt;option_schema&gt;[{"hint":"If false, buttons are stacked on the right; if true, they are side-by-side","name":"portal","section":"Presentation","label":"Buttons stacked side by side","type":"boolean"},{"hint":"Maximum number of elements that are shown in the list of approvals","name":"max_number_of_elements_shown_on_the_list","default_value":"10","section":"Presentation","label":"Max number of elements shown in the list (only positive numbers &amp;gt; 0, 10 otherwise)","type":"integer"}]&lt;/option_schema&gt;&lt;public&gt;true&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[//we get only a max number of elements to avoid to have a big list of it
var maxNumberOfItemsInTheList = parseInt(options.max_number_of_elements_shown_on_the_list);
//set 10 if maxnumber is undefined, empty or negative value
maxNumberOfItemsInTheList = maxNumberOfItemsInTheList&gt;0 ? maxNumberOfItemsInTheList : 10; 

var initRow = 0;
var lastRow = maxNumberOfItemsInTheList;
var currentPage = 0; //0 is the first page
if (input) {
	// update pagination
	currentPage = input.pagination.currentPage;
	initRow = (currentPage * maxNumberOfItemsInTheList);
	lastRow = initRow + maxNumberOfItemsInTheList;
	
	if (input.op == 'approved' || input.op == 'rejected') {
		var app = new GlideRecord("sysapproval_approver");
		if (app.get(input.target) &amp;&amp; app.state.canWrite()) {
			app.state = input.op;
			app.update();
		}
	}
}

data.ViewApprovalPageMsg = gs.getMessage("View approval page");
data.esignature = {
	username:  gs.getUserName(),
	userSysId: gs.getUserID(),
	e_sig_required: GlidePluginManager.isRegistered('com.glide.e_signature_approvals')
};

var esigRequiredMap = {};
if (data.esignature.e_sig_required) {
	var esigRegistryGR = new GlideRecord("e_signature_registry");
	esigRegistryGR.addQuery("enabled", "true");
	esigRegistryGR.query();
	while(esigRegistryGR.next()) {
		esigRequiredMap[esigRegistryGR.getValue("table_name")] = true;
	}
}

var gr = new GlideRecord('sysapproval_approver');
gr.chooseWindow(initRow, lastRow);
var qc1 = gr.addQuery("state", "requested");
//if (input)
//  qc1.addOrCondition("sys_id", "IN", input.ids);
data.myApprovals = getMyApprovals();
gr.addQuery("approver", data.myApprovals);
gr.orderBy("sys_created_on");
gr.query();
var rowCount = gr.getRowCount();
var approvals = [];
var ids = [];
var source_tables = [];

while (gr.next()) {
  var task = getRecordBeingApproved(gr);
	if (!task.isValidRecord())
		continue;

  ids.push(gr.getUniqueValue());
  var t = {};
  t.number = task.getDisplayValue();
  t.short_description = task.short_description.toString();
  if (gr.getValue("approver") != gs.getUserID())
	  t.approver = gr.approver.getDisplayValue();
  if (task.isValidField("opened_by") &amp;&amp; !task.opened_by.nil())
	  t.opened_by = task.opened_by.getDisplayValue();

  // requestor &gt;&gt; opener
  if (task.isValidField("requested_by") &amp;&amp; !task.requested_by.nil())
	  t.opened_by = task.requested_by.getDisplayValue();

  t.start_date = task.start_date.getDisplayValue();
  t.end_date = task.end_date.getDisplayValue();
  t.quantity = task.quantity.getDisplayValue();
  t.table = task.getLabel();
  if (task.getValue("price") &gt; 0)
	  t.price = task.getDisplayValue("price");

  if (task.getValue("recurring_price") &gt; 0)
	  t.recurring_price = task.getDisplayValue("recurring_price");

  t.recurring_frequency = task.getDisplayValue("recurring_frequency");

  var items = [];
  var idx = 0;
  var itemsGR = new GlideRecord("sc_req_item");
  itemsGR.addQuery("request", task.sys_id);
  itemsGR.query();
  if (itemsGR.getRowCount() &gt; 1)
    t.short_description = itemsGR.getRowCount() + " requested items";

  while (itemsGR.next()) {
    var item = {};
    item.short_description = itemsGR.short_description.toString();
    if (itemsGR.getValue("price") &gt; 0)
      item.price = itemsGR.getDisplayValue("price");
    if (itemsGR.getValue("recurring_price") &gt; 0) {
      item.recurring_price = itemsGR.getDisplayValue("recurring_price");
      item.recurring_frequency = itemsGR.getDisplayValue("recurring_frequency");
    }
    if (itemsGR.getRowCount() == 1) {
      item.variables = $sp.getRecordVariablesArray(itemsGR);
      t.short_description = itemsGR.short_description.toString();
    }

    items[idx] = item;
    idx++;
  }

  var j = {};
  j.sys_id = gr.getUniqueValue();
  j.table = gr.getRecordClassName();
	j.approval_source_table = gr.getValue("source_table");
	if (!j.approval_source_table)
		j.approval_source_table = gr.sysapproval.sys_class_name + "";
	j.requireEsigApproval = esigRequiredMap[j.approval_source_table];
	j.task = t;
  if (task)
    j.variables = $sp.getRecordVariablesArray(task);

  j.items = items;
  j.state = gr.getValue("state");
  j.stateLabel = gr.state.getDisplayValue();
  approvals.push(j);
}

data.ids = ids;
data.approvals = approvals;
data.showApprovals =gs.getUser().hasRole('approver_user');
// for pagination
data.pagination = {};
data.pagination.hasNext = (approvals.length == (parseInt(lastRow) - parseInt(initRow)) &amp;&amp; lastRow &lt; rowCount);
data.pagination.hasPrevious = parseInt(initRow) &gt; 0;
data.pagination.from = parseInt(initRow + 1);
data.pagination.to = parseInt(lastRow) &lt; parseInt(rowCount) ? parseInt(lastRow) : parseInt(rowCount);
data.pagination.of = parseInt(rowCount);
data.pagination.showPagination = data.pagination.hasPrevious || data.pagination.hasNext;
data.pagination.currentPage = data.pagination.from &gt; data.pagination.to ? currentPage -1 : currentPage;

function getRecordBeingApproved(gr) {
  if (!gr.sysapproval.nil())
    return gr.sysapproval.getRefRecord();

  return gr.document_id.getRefRecord();
}]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;160031518&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-10-25 10:32:34&lt;/sys_created_on&gt;&lt;sys_id&gt;1376238c4fb04010bac5f3117310c7e1&lt;/sys_id&gt;&lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;&lt;sys_name&gt; Approvals_ci&lt;/sys_name&gt;&lt;sys_package display_value="NoDue" source="x_386572_nodue"&gt;5df4a101db4333002aea1fc768961924&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="NoDue"&gt;5df4a101db4333002aea1fc768961924&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_1376238c4fb04010bac5f3117310c7e1&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;160031518&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-10-25 10:48:12&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div class="panel panel-{{::options.color}} b" ng-if="data.showApprovals"&gt;
  &lt;div class="panel-heading"&gt;
    &lt;h2 class="h4 panel-title"&gt;&lt;fa ng-if="::options.glyph.length" name="{{::options.glyph}}" class="m-r-sm" /&gt;${My Approvals}
      &lt;label ng-if="data.pagination.showPagination &amp;&amp; (data.pagination.from &lt;= data.pagination.to)" class="pull-right text-info"&gt;&lt;span ng-if="data.pagination.from != data.pagination.to"&gt;{{data.pagination.from}} ${to_lower}&lt;/span&gt; {{data.pagination.to}} of {{data.pagination.of}}&lt;/label&gt;&lt;/h2&gt;
  &lt;/div&gt;
  &lt;div class="panel-body" ng-class="{'padder-b-none': data.approvals.length != 0}"&gt;
    &lt;div ng-if="data.approvals.length == 0 &amp;&amp; data.pagination.of == 0"&gt;
      ${You have no pending approvals}
    &lt;/div&gt;
    &lt;div ng-if="data.approvals.length == 0 &amp;&amp; data.pagination.of != 0"&gt;
      ${Loading approvals...}
    &lt;/div&gt;
    &lt;div ng-repeat="approval in data.approvals" class="sp-approval m-b-xl"&gt;
      &lt;div class="row"&gt;
        &lt;div ng-class="contentColClass"&gt;
          &lt;div ng-if="approval.task.number || approval.task.short_description"&gt;
            &lt;a ng-href="?id=approval&amp;table=sysapproval_approver&amp;sys_id={{::approval.sys_id}}" title="{{data.ViewApprovalPageMsg}}"&gt;
              &lt;span ng-if="approval.task.number"&gt;{{::approval.task.number}}&lt;/span&gt;
              &lt;span ng-if="approval.task.number &amp;&amp; approval.task.short_description"&gt; - &lt;/span&gt;
              &lt;span ng-if="approval.task.short_description"&gt;{{::approval.task.short_description}}&lt;/span&gt;
            &lt;/a&gt;
          &lt;/div&gt;
          &lt;div ng-if="approval.task.opened_by"&gt;&lt;label&gt;${Requestor}&lt;/label&gt; {{::approval.task.opened_by}}&lt;/div&gt;
          &lt;div ng-if="approval.task.approver"&gt;&lt;label&gt;${Approver}&lt;/label&gt; {{::approval.task.approver}}&lt;/div&gt;
          &lt;div ng-if="approval.task.start_date"&gt;&lt;label&gt;${Start}&lt;/label&gt; {{::approval.task.start_date}}&lt;/div&gt;
          &lt;div ng-if="approval.task.end_date"&gt;&lt;label&gt;${End}&lt;/label&gt; {{::approval.task.end_date}}&lt;/div&gt;
          &lt;div ng-if="approval.task.quantity"&gt;&lt;label&gt;${Quantity}&lt;/label&gt; {{::approval.task.quantity}}&lt;/div&gt;
          &lt;div ng-if="approval.task.price"&gt;&lt;label&gt;${Price}&lt;/label&gt; {{::approval.task.price}}
            &lt;span ng-if="approval.task.recurring_price"&gt;&lt;label&gt;${Recurring price}&lt;/label&gt; {{::approval.task.recurring_price}} {{::approval.task.recurring_frequency}}&lt;/span&gt;
            &lt;label ng-if="approval.task.quantity &amp;&amp; approval.task.quantity &gt; 1"&gt; ${each}&lt;/label&gt;
          &lt;/div&gt;
          &lt;div ng-if="approval.items.length == 1"&gt;
            &lt;div ng-repeat="item in approval.items"&gt;
              &lt;div ng-if="item.variables.length &gt; 0" ng-init="variable_toggle=false"&gt;
                &lt;a href="javascript:void(0)" ng-click="variable_toggle = !variable_toggle"&gt;
                  &lt;span class="glyphicon"
                        ng-class="{'glyphicon-chevron-down': !variable_toggle, 'glyphicon-chevron-up': variable_toggle}"&gt;
                  &lt;/span&gt;
                  ${Options}
                &lt;/a&gt;
                &lt;div ng-repeat="variable in item.variables" ng-if="variable_toggle"&gt;
                  &lt;label class="text-muted"&gt;{{::variable.label}}&lt;/label&gt;
                  &lt;div&gt;&lt;span class="pre-wrap"&gt;{{::variable.display_value}}&lt;/span&gt;&lt;/div&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;

          &lt;div ng-if="approval.variables.length &gt; 0" ng-init="variable_toggle=false"&gt;
            &lt;a href="javascript:void(0)" ng-click="variable_toggle = !variable_toggle"&gt;
              &lt;span class="glyphicon"
                    ng-class="{'glyphicon-chevron-down': !variable_toggle, 'glyphicon-chevron-up': variable_toggle}"&gt;
              &lt;/span&gt;
              ${Options}
            &lt;/a&gt;
            &lt;div ng-repeat="variable in approval.variables" ng-if="variable_toggle"&gt;
              &lt;label&gt;{{::variable.label}}&lt;/label&gt;
              &lt;div&gt;&lt;span class="pre-wrap"&gt;{{::variable.display_value}}&lt;/span&gt;&lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;

        &lt;div ng-if="!options.portal" class="col-sm-3"&gt;
          &lt;button name="approve" ng-if="approval.state == 'requested'" class="btn btn-primary btn-block" style="border-width:1px;" ng-click="approve(approval.sys_id, approval.requireEsigApproval);"&gt;${Approve}&lt;/button&gt;
          &lt;button name="reject" ng-if="approval.state == 'requested'" class="btn btn-default btn-block" ng-click="reject(approval.sys_id, approval.requireEsigApproval);"&gt;${Reject}&lt;/button&gt;
          &lt;button ng-if="approval.state == 'approved'" class="btn btn-success btn-block"&gt;{{approval.stateLabel}}&lt;/button&gt;
          &lt;button ng-if="approval.state == 'rejected'" class="btn btn-danger btn-block"&gt;{{approval.stateLabel}}&lt;/button&gt;
          &lt;button ng-if="approval.state != 'requested'" class="btn btn-default btn-block" style="visibility:hidden"&gt;{{approval.stateLabel}}&lt;/button&gt;
        &lt;/div&gt;
        &lt;div ng-if="options.portal &amp;&amp; approval.state == 'requested'" class="col-xs-6"&gt;
          &lt;button name="reject" class="btn btn-default btn-block" ng-click="reject(approval.sys_id, approval.requireEsigApproval);"&gt;${Reject}&lt;/button&gt;
        &lt;/div&gt;
        &lt;div ng-if="options.portal &amp;&amp; approval.state == 'requested'" class="col-xs-6"&gt;
          &lt;button name="approve" class="btn btn-primary btn-block" ng-click="approve(approval.sys_id, approval.requireEsigApproval);"&gt;${Approve}&lt;/button&gt;
        &lt;/div&gt;
        &lt;div ng-if="options.portal &amp;&amp; approval.state != 'requested'" class="col-xs-12"&gt;
          &lt;button ng-if="approval.state == 'approved'" class="btn btn-success btn-block"&gt;{{approval.stateLabel}}&lt;/button&gt;
          &lt;button ng-if="approval.state == 'rejected'" class="btn btn-danger btn-block"&gt;{{approval.stateLabel}}&lt;/button&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt; &lt;!-- body --&gt;

  &lt;/div&gt;
  &lt;div class="panel-footer clearfix" ng-if="data.pagination.showPagination"&gt;
    &lt;a id="previous-btn" href="javascript:void(0)" ng-click="previousPage()" ng-show="data.pagination.hasPrevious" class="pull-left btn btn-sm btn-default" aria-label="${Pagination button Previous}"&gt;
      &lt;i class="fa fa-arrow-left m-r-sm" aria-hidden="true"&gt;&lt;/i&gt;${Previous}&lt;/a&gt;
    &lt;a id="next_btn" href="javascript:void(0)" ng-click="nextPage()" ng-show="data.pagination.hasNext" class="pull-right btn btn-sm btn-default " aria-label="${Pagination button Next}"&gt;
      ${Next}&lt;i class="fa fa-arrow-right m-r-sm col-md-offset-3" aria-hidden="true"&gt;&lt;/i&gt;&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
        <payload_hash>1986285384</payload_hash>
        <record_name> Approvals_ci</record_name>
        <reverted_from/>
        <source>73bdf8dc4ff77300bac5f3117310c76b</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>160031518</sys_created_by>
        <sys_created_on>2019-10-25 10:48:12</sys_created_on>
        <sys_id>d41a2fcc4fb04010bac5f3117310c785</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>16e0287ed9c0000001</sys_recorded_at>
        <sys_updated_by>160031518</sys_updated_by>
        <sys_updated_on>2019-10-25 10:48:12</sys_updated_on>
        <type>Widget</type>
        <update_guid>101a2fcc36b04010f4c1956e17d07185</update_guid>
        <update_guid_history>101a2fcc36b04010f4c1956e17d07185:1986285384,c8d9a30076f0401036d972e06a31b389:-118191254,39d8af8cf9b040101a489faaff0763c3:-348882358,1696af4c9ab04010563c9f2d910a97ee:2145749043,9776238c31b04010d31e02a3933489e2:557206821</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value=" Approvals_ci">dd4ba3804ff04010bac5f3117310c79e</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>160031518</sys_created_by>
        <sys_created_on>2019-10-25 10:53:28</sys_created_on>
        <sys_db_object display_value="" name="sp_widget">sp_widget</sys_db_object>
        <sys_id>227bc581b656436e9d247fa52496dc84</sys_id>
        <sys_metadata>1376238c4fb04010bac5f3117310c7e1</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name> Approvals_ci</sys_name>
        <sys_package display_value="NoDue" source="x_386572_nodue">5df4a101db4333002aea1fc768961924</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="NoDue">5df4a101db4333002aea1fc768961924</sys_scope>
        <sys_scope_delete display_value="">0b77f8f2896c47da95a17955855babc9</sys_scope_delete>
        <sys_update_name>sp_widget_1376238c4fb04010bac5f3117310c7e1</sys_update_name>
        <sys_update_version display_value="sp_widget_1376238c4fb04010bac5f3117310c7e1">d41a2fcc4fb04010bac5f3117310c785</sys_update_version>
        <sys_updated_by>160031518</sys_updated_by>
        <sys_updated_on>2019-10-25 10:53:28</sys_updated_on>
    </sys_metadata_delete>
</record_update>
